{"version":3,"file":"ColorArrayCheckbox.stories-b78cb76e.js","sources":["../../src/components/ColorArrayCheckbox.vue","../../src/components/ColorArrayCheckbox.stories.ts"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n\n  /**\n   * 値を追加する配列\n   */\n  modelValue: {\n    type: Array,\n    required: true,\n  },\n\n  /**\n   * チェック時に配列に追加する値\n   */\n  item: {\n    type: null,\n    required: true,\n  },\n\n  /**\n   * ラベルとして表示する値\n   */\n  label: {\n    type: String,\n    required: true,\n  },\n\n  /**\n   * 背景色\n   */\n  color: {\n    type: String,\n    default: 'rgb(0, 0, 0, 0)',\n  },\n\n  /**\n   * 非活性化どうか\n   */\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n})\n\nconst emit = defineEmits(['update:modelValue', 'check', 'uncheck'])\n\nconst checked = computed({\n  get() {\n    return props.modelValue.includes(props.item)\n  },\n  set(state: boolean) {\n    emit('update:modelValue', state\n      ? [...props.modelValue, props.item]\n      : props.modelValue.filter(item => item !== props.item))\n  },\n})\n\nfunction onInput(event: Event) {\n  if (!(event.target instanceof HTMLInputElement))\n    return\n\n  if (event.target.checked)\n    emit('check')\n\n  else\n    emit('uncheck')\n}\n</script>\n\n<template>\n  <label\n    class=\"\n      p-2 text-center transition\n      focus-within:outline-dotted focus-within:outline-slate-500\n      focus-within:outline-2 focus-within:outline-offset-2\n    \"\n    :class=\"[\n      disabled ? 'cursor-default' : 'cursor-pointer hover:bg-slate-100',\n      checked && 'bg-slate-300',\n    ]\"\n    :style=\"{ background: checked && !disabled ? color : '' }\"\n  >\n    <input\n      v-model=\"checked\"\n      class=\"opacity-0 w-0\"\n      type=\"checkbox\"\n      :disabled=\"disabled\"\n      @input=\"onInput\"\n    >\n    <span>\n      {{ label }}\n    </span>\n  </label>\n</template>\n","import { ref } from 'vue';\nimport type { Meta, StoryObj } from '@storybook/vue3';\nimport ColorArrayCheckbox from './ColorArrayCheckbox.vue';\nconst meta: Meta<typeof ColorArrayCheckbox> = {\n  title: 'ColorArrayCheckbox',\n  component: ColorArrayCheckbox,\n  render: (args: any) => ({\n    components: {\n      ColorArrayCheckbox\n    },\n    setup() {\n      const items = ref([]);\n      return {\n        args,\n        items\n      };\n    },\n    template: `\n      <ColorArrayCheckbox color=\"#FFD600\" v-model=\"items\" :item=\"1\" label=\"test\" />\n    `\n  }),\n  parameters: {\n    layout: 'fullscreen'\n  },\n  tags: ['autodocs']\n};\nexport default meta;\ntype Story = StoryObj<typeof ColorArrayCheckbox>;\nexport const Basic: Story = {\n  args: {}\n};\nBasic.parameters = {\n  ...Basic.parameters,\n  docs: {\n    ...Basic.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {}\\n}\",\n      ...Basic.parameters?.docs?.source\n    }\n  }\n};"],"names":["checked","computed","props","state","emit","item","onInput","event","meta","ColorArrayCheckbox","args","items","ref","Basic","_a","_c","_b"],"mappings":"gcAgDMA,EAAUC,EAAS,CACvB,KAAM,CACJ,OAAOC,EAAM,WAAW,SAASA,EAAM,IAAI,CAC7C,EACA,IAAIC,EAAgB,CAClBC,EAAK,oBAAqBD,EACtB,CAAC,GAAGD,EAAM,WAAYA,EAAM,IAAI,EAChCA,EAAM,WAAW,OAAOG,GAAQA,IAASH,EAAM,IAAI,CAAC,CAC1D,CAAA,CACD,EAED,SAASI,EAAQC,EAAc,CACvBA,EAAM,kBAAkB,mBAG1BA,EAAM,OAAO,QACfH,EAAK,OAAO,EAGZA,EAAK,SAAS,EAClB,4lCCjEA,MAAMI,EAAwC,CAC5C,MAAO,qBACP,UAAWC,EACX,OAASC,IAAe,CACtB,WAAY,CAAA,mBACVD,CACF,EACA,OAAQ,CACA,MAAAE,EAAQC,EAAI,CAAA,CAAE,EACb,MAAA,CACL,KAAAF,EACA,MAAAC,CAAA,CAEJ,EACA,SAAU;AAAA;AAAA,KAAA,GAIZ,WAAY,CACV,OAAQ,YACV,EACA,KAAM,CAAC,UAAU,CACnB,EAGaE,EAAe,CAC1B,KAAM,CAAC,CACT,YACAA,EAAM,WAAa,CACjB,GAAGA,EAAM,WACT,KAAM,CACJ,IAAGC,EAAAD,EAAM,aAAN,YAAAC,EAAkB,KACrB,OAAQ,CACN,eAAgB;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAH,EAAM,aAAN,YAAAG,EAAkB,OAAlB,YAAAD,EAAwB,MAC7B,CACF,CACF"}